Ferramenta Front-End - Vite
--------------------------------------

Cria um ambiente de desenvolvimento já configurado e otimizado para a criação de aplicativos com React.

https://vitejs.dev/

Na pasta que deseja instalar:

npm create vite@latest .
npm install

Seguir o prompt > React > JavaScript

Estrutura Mínima
-----------------------------------
Abaixo os arquivos essenciais.

#)
- node_modules
- public
- src
  - App.jsx
  - main.jsx
- index.html
- package.json
- package-lock.json
- vite.config.js


IMPORTANTE!!
-----------------------------------
todos os arquivos que tem o caminho './' são add na pasta PUBLIC!



Código mínimo para o index.html
-----------------------------------
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>React</title>
  </head>

  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Código mínimo para o main.jsx
-----------------------------------
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

ReactDOM.createRoot(document.getElementById('root')).render(<App />);


Código mínimo para o App.jsx
-----------------------------------
import React from 'react';

const App = () => {
  return <div>App React</div>;
};

export default App;



Comandos
-----------------------------------

Inicia o desenvolvimento --> npm run dev;
Cria a build final --> npm run build;



ESLint
-----------------------------------
Configurar o eslint:

module.exports = {
  env: {
    browser: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
  plugins: ['react-refresh'],
  rules: {
    'react-refresh/only-export-components': 'off',
    'react/react-in-jsx-scope': 'off',
    'react/prop-types': 'off',
    'no-unsafe-finally': 'off',
    'no-unused-vars': 'off',
    'react/jsx-key': 'off',
  },
};


Esconder Arquivos
-----------------------------------
Para deixar a interface mais limpa:

em .vscode/settings.json:

{
  "git.enabled": false,
  "files.exclude": {
    "node_modules": true,
    ".vscode": true,
    ".gitignore": true,
    "package.json": true,
    "package-lock.json": true,
    ".eslintrc.json": true,
    "vite.config.js": true,
    "public": true,
    "index.html": true
  }
}

Modo Estrito
-----------------------------------
O modo estrito do React permite pegarmos alguns bugs no desenvolvimento.

a) Sem o modo estrito:
ReactDOM.createRoot(document.getElementById('root')).render(<App />);

b) Com o modo estrito:
ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);


.js vs .jsx
-----------------------------------
Durante o curso você verá eu utilizando .js em arquivos jsx, o create-react-app permitia isso, porém o Vite não permite.

Então todo arquivo novo que você criar, use .jsx.

index.js > main.jsx

